# Generated by Django 5.0.4 on 2024-06-30 13:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0002_mymodel_menu'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyMetaOptionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
            ],
            options={
                'db_table': 'custom_table_name',
                'ordering': ('-name', 'id'),
            },
        ),
        migrations.CreateModel(
            name='RestaurantReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviewer_name', models.CharField(max_length=100)),
                ('review_content', models.TextField()),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
            ],
            options={
                'verbose_name': 'Restaurant Review',
                'verbose_name_plural': 'Restaurant Reviews',
                'ordering': ['-rating'],
            },
        ),
        migrations.AddConstraint(
            model_name='mymetaoptionsmodel',
            constraint=models.CheckConstraint(check=models.Q(('age__gte', 18)), name='age_gte_18', violation_error_message='Age must be at least 18'),
        ),
        migrations.AlterUniqueTogether(
            name='mymetaoptionsmodel',
            unique_together={('name', 'id')},
        ),
        migrations.AddField(
            model_name='restaurantreview',
            name='restaurant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.restaurant'),
        ),
        migrations.AlterUniqueTogether(
            name='restaurantreview',
            unique_together={('reviewer_name', 'restaurant')},
        ),
    ]
